Terminais sem uso na gramática

   KW_CHAR
   KW_FLOAT
   KW_THEN
   KW_ELSE
   KW_WHILE
   KW_FOR
   KW_READ
   KW_RETURN
   KW_PRINT
   OPERATOR_LE
   OPERATOR_GE
   OPERATOR_EQ
   OPERATOR_NE
   OPERATOR_AND
   OPERATOR_OR
   LIT_REAL
   LIT_CHAR
   LIT_STRING
   TOKEN_ERROR


Estado 37 conflitos: 2 de deslocamento/redução
Estado 38 conflitos: 2 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: decl

    2 decl: dec decl
    3     | %empty

    4 dec: KW_INT TK_IDENTIFIER ';'
    5    | KW_INT TK_IDENTIFIER '(' paramlist ')' body

    6 paramlist: TK_IDENTIFIER rest

    7 rest: ',' TK_IDENTIFIER rest
    8     | %empty

    9 body: '{' lcmd '}'

   10 lcmd: cmd lcmd
   11     | %empty

   12 cmd: TK_IDENTIFIER '=' exp
   13    | KW_IF '(' exp ')' cmd cmd

   14 exp: TK_IDENTIFIER
   15    | LIT_INTEGER
   16    | exp '+' exp
   17    | exp '-' exp
   18    | TK_IDENTIFIER '(' ')'


Terminais, com as regras onde eles aparecem

$end (0) 0
'(' (40) 5 13 18
')' (41) 5 13 18
'+' (43) 16
',' (44) 7
'-' (45) 17
';' (59) 4
'=' (61) 12
'{' (123) 9
'}' (125) 9
error (256)
KW_CHAR (258)
KW_INT (259) 4 5
KW_FLOAT (260)
KW_IF (261) 13
KW_THEN (262)
KW_ELSE (263)
KW_WHILE (264)
KW_FOR (265)
KW_READ (266)
KW_RETURN (267)
KW_PRINT (268)
OPERATOR_LE (269)
OPERATOR_GE (270)
OPERATOR_EQ (271)
OPERATOR_NE (272)
OPERATOR_AND (273)
OPERATOR_OR (274)
TK_IDENTIFIER (275) 4 5 6 7 12 14 18
LIT_INTEGER (276) 15
LIT_REAL (277)
LIT_CHAR (278)
LIT_STRING (279)
TOKEN_ERROR (280)


Não terminais com as regras onde eles aparecem

$accept (35)
    à esquerda: 0
program (36)
    à esquerda: 1, à direita: 0
decl (37)
    à esquerda: 2 3, à direita: 1 2
dec (38)
    à esquerda: 4 5, à direita: 2
paramlist (39)
    à esquerda: 6, à direita: 5
rest (40)
    à esquerda: 7 8, à direita: 6 7
body (41)
    à esquerda: 9, à direita: 5
lcmd (42)
    à esquerda: 10 11, à direita: 9 10
cmd (43)
    à esquerda: 12 13, à direita: 10 13
exp (44)
    à esquerda: 14 15 16 17 18, à direita: 12 13 16 17


Estado 0

    0 $accept: . program $end

    KW_INT  deslocar, e ir ao estado 1

    $padrão  reduzir usando a regra 3 (decl)

    program  ir ao estado 2
    decl     ir ao estado 3
    dec      ir ao estado 4


Estado 1

    4 dec: KW_INT . TK_IDENTIFIER ';'
    5    | KW_INT . TK_IDENTIFIER '(' paramlist ')' body

    TK_IDENTIFIER  deslocar, e ir ao estado 5


Estado 2

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 6


Estado 3

    1 program: decl .

    $padrão  reduzir usando a regra 1 (program)


Estado 4

    2 decl: dec . decl

    KW_INT  deslocar, e ir ao estado 1

    $padrão  reduzir usando a regra 3 (decl)

    decl  ir ao estado 7
    dec   ir ao estado 4


Estado 5

    4 dec: KW_INT TK_IDENTIFIER . ';'
    5    | KW_INT TK_IDENTIFIER . '(' paramlist ')' body

    ';'  deslocar, e ir ao estado 8
    '('  deslocar, e ir ao estado 9


Estado 6

    0 $accept: program $end .

    $padrão  aceitar


Estado 7

    2 decl: dec decl .

    $padrão  reduzir usando a regra 2 (decl)


Estado 8

    4 dec: KW_INT TK_IDENTIFIER ';' .

    $padrão  reduzir usando a regra 4 (dec)


Estado 9

    5 dec: KW_INT TK_IDENTIFIER '(' . paramlist ')' body

    TK_IDENTIFIER  deslocar, e ir ao estado 10

    paramlist  ir ao estado 11


Estado 10

    6 paramlist: TK_IDENTIFIER . rest

    ','  deslocar, e ir ao estado 12

    $padrão  reduzir usando a regra 8 (rest)

    rest  ir ao estado 13


Estado 11

    5 dec: KW_INT TK_IDENTIFIER '(' paramlist . ')' body

    ')'  deslocar, e ir ao estado 14


Estado 12

    7 rest: ',' . TK_IDENTIFIER rest

    TK_IDENTIFIER  deslocar, e ir ao estado 15


Estado 13

    6 paramlist: TK_IDENTIFIER rest .

    $padrão  reduzir usando a regra 6 (paramlist)


Estado 14

    5 dec: KW_INT TK_IDENTIFIER '(' paramlist ')' . body

    '{'  deslocar, e ir ao estado 16

    body  ir ao estado 17


Estado 15

    7 rest: ',' TK_IDENTIFIER . rest

    ','  deslocar, e ir ao estado 12

    $padrão  reduzir usando a regra 8 (rest)

    rest  ir ao estado 18


Estado 16

    9 body: '{' . lcmd '}'

    KW_IF          deslocar, e ir ao estado 19
    TK_IDENTIFIER  deslocar, e ir ao estado 20

    $padrão  reduzir usando a regra 11 (lcmd)

    lcmd  ir ao estado 21
    cmd   ir ao estado 22


Estado 17

    5 dec: KW_INT TK_IDENTIFIER '(' paramlist ')' body .

    $padrão  reduzir usando a regra 5 (dec)


Estado 18

    7 rest: ',' TK_IDENTIFIER rest .

    $padrão  reduzir usando a regra 7 (rest)


Estado 19

   13 cmd: KW_IF . '(' exp ')' cmd cmd

    '('  deslocar, e ir ao estado 23


Estado 20

   12 cmd: TK_IDENTIFIER . '=' exp

    '='  deslocar, e ir ao estado 24


Estado 21

    9 body: '{' lcmd . '}'

    '}'  deslocar, e ir ao estado 25


Estado 22

   10 lcmd: cmd . lcmd

    KW_IF          deslocar, e ir ao estado 19
    TK_IDENTIFIER  deslocar, e ir ao estado 20

    $padrão  reduzir usando a regra 11 (lcmd)

    lcmd  ir ao estado 26
    cmd   ir ao estado 22


Estado 23

   13 cmd: KW_IF '(' . exp ')' cmd cmd

    TK_IDENTIFIER  deslocar, e ir ao estado 27
    LIT_INTEGER    deslocar, e ir ao estado 28

    exp  ir ao estado 29


Estado 24

   12 cmd: TK_IDENTIFIER '=' . exp

    TK_IDENTIFIER  deslocar, e ir ao estado 27
    LIT_INTEGER    deslocar, e ir ao estado 28

    exp  ir ao estado 30


Estado 25

    9 body: '{' lcmd '}' .

    $padrão  reduzir usando a regra 9 (body)


Estado 26

   10 lcmd: cmd lcmd .

    $padrão  reduzir usando a regra 10 (lcmd)


Estado 27

   14 exp: TK_IDENTIFIER .
   18    | TK_IDENTIFIER . '(' ')'

    '('  deslocar, e ir ao estado 31

    $padrão  reduzir usando a regra 14 (exp)


Estado 28

   15 exp: LIT_INTEGER .

    $padrão  reduzir usando a regra 15 (exp)


Estado 29

   13 cmd: KW_IF '(' exp . ')' cmd cmd
   16 exp: exp . '+' exp
   17    | exp . '-' exp

    ')'  deslocar, e ir ao estado 32
    '+'  deslocar, e ir ao estado 33
    '-'  deslocar, e ir ao estado 34


Estado 30

   12 cmd: TK_IDENTIFIER '=' exp .
   16 exp: exp . '+' exp
   17    | exp . '-' exp

    '+'  deslocar, e ir ao estado 33
    '-'  deslocar, e ir ao estado 34

    $padrão  reduzir usando a regra 12 (cmd)


Estado 31

   18 exp: TK_IDENTIFIER '(' . ')'

    ')'  deslocar, e ir ao estado 35


Estado 32

   13 cmd: KW_IF '(' exp ')' . cmd cmd

    KW_IF          deslocar, e ir ao estado 19
    TK_IDENTIFIER  deslocar, e ir ao estado 20

    cmd  ir ao estado 36


Estado 33

   16 exp: exp '+' . exp

    TK_IDENTIFIER  deslocar, e ir ao estado 27
    LIT_INTEGER    deslocar, e ir ao estado 28

    exp  ir ao estado 37


Estado 34

   17 exp: exp '-' . exp

    TK_IDENTIFIER  deslocar, e ir ao estado 27
    LIT_INTEGER    deslocar, e ir ao estado 28

    exp  ir ao estado 38


Estado 35

   18 exp: TK_IDENTIFIER '(' ')' .

    $padrão  reduzir usando a regra 18 (exp)


Estado 36

   13 cmd: KW_IF '(' exp ')' cmd . cmd

    KW_IF          deslocar, e ir ao estado 19
    TK_IDENTIFIER  deslocar, e ir ao estado 20

    cmd  ir ao estado 39


Estado 37

   16 exp: exp . '+' exp
   16    | exp '+' exp .
   17    | exp . '-' exp

    '+'  deslocar, e ir ao estado 33
    '-'  deslocar, e ir ao estado 34

    '+'       [reduzir usando a regra 16 (exp)]
    '-'       [reduzir usando a regra 16 (exp)]
    $padrão  reduzir usando a regra 16 (exp)


Estado 38

   16 exp: exp . '+' exp
   17    | exp . '-' exp
   17    | exp '-' exp .

    '+'  deslocar, e ir ao estado 33
    '-'  deslocar, e ir ao estado 34

    '+'       [reduzir usando a regra 17 (exp)]
    '-'       [reduzir usando a regra 17 (exp)]
    $padrão  reduzir usando a regra 17 (exp)


Estado 39

   13 cmd: KW_IF '(' exp ')' cmd cmd .

    $padrão  reduzir usando a regra 13 (cmd)
