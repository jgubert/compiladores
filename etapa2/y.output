Terminals unused in grammar

   KW_CHAR
   KW_INT
   KW_FOR
   KW_RETURN
   TOKEN_ERROR


State 27 conflicts: 1 shift/reduce
State 46 conflicts: 7 shift/reduce, 1 reduce/reduce
State 53 conflicts: 7 shift/reduce
State 54 conflicts: 7 shift/reduce
State 60 conflicts: 7 shift/reduce, 1 reduce/reduce
State 84 conflicts: 12 shift/reduce
State 91 conflicts: 7 shift/reduce
State 100 conflicts: 7 shift/reduce
State 106 conflicts: 12 shift/reduce
State 107 conflicts: 12 shift/reduce
State 108 conflicts: 12 shift/reduce
State 109 conflicts: 12 shift/reduce
State 110 conflicts: 12 shift/reduce
State 111 conflicts: 12 shift/reduce
State 113 conflicts: 12 shift/reduce
State 114 conflicts: 12 shift/reduce
State 115 conflicts: 12 shift/reduce
State 116 conflicts: 12 shift/reduce
State 117 conflicts: 12 shift/reduce
State 118 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl

    2 decl: dec decl
    3     | %empty

    4 dec: TK_IDENTIFIER ':' typevar '=' literal ';'
    5    | TK_IDENTIFIER ':' typevar '[' LIT_INTEGER ']' decv ';'
    6    | TK_IDENTIFIER ':' typevar '[' LIT_INTEGER ']' ';'
    7    | '(' typevar ')' TK_IDENTIFIER '(' paramlist ')' body

    8 decv: LIT_INTEGER decv
    9     | LIT_CHAR ' ' decv
   10     | LIT_REAL ' ' decv
   11     | %empty

   12 typevar: KW_BYTE
   13        | KW_FLOAT
   14        | KW_SHORT
   15        | KW_LONG
   16        | KW_DOUBLE

   17 literal: LIT_INTEGER
   18        | LIT_CHAR
   19        | LIT_REAL

   20 paramlist: TK_IDENTIFIER rest
   21          | literal rest
   22          | %empty

   23 rest: ',' TK_IDENTIFIER rest
   24     | ',' literal rest
   25     | %empty

   26 body: '{' lcmd '}'

   27 lcmd: cmd lcmd
   28     | %empty

   29 cmd: TK_IDENTIFIER '=' exp ';'
   30    | TK_IDENTIFIER '[' LIT_INTEGER ']' '=' exp ';'
   31    | KW_IF '(' exp ')' cmd cmd ';'
   32    | KW_THEN cmd cmd ';'
   33    | KW_ELSE cmd cmd ';'
   34    | KW_WHILE '(' exp ')' cmd cmd ';'
   35    | KW_WHILE '(' exp ')' body cmd ';'
   36    | KW_PRINT LIT_STRING ';'
   37    | KW_READ '>' TK_IDENTIFIER ';'
   38    | %empty

   39 exp: TK_IDENTIFIER
   40    | TK_IDENTIFIER '[' exp ']'
   41    | LIT_INTEGER
   42    | exp '+' exp
   43    | exp '-' exp
   44    | exp '*' exp
   45    | exp '/' exp
   46    | exp '<' exp
   47    | exp '>' exp
   48    | '!' exp
   49    | exp OPERATOR_LE exp
   50    | exp OPERATOR_GE exp
   51    | exp OPERATOR_EQ exp
   52    | exp OPERATOR_NE exp
   53    | exp OPERATOR_AND exp
   54    | exp OPERATOR_OR exp
   55    | TK_IDENTIFIER '(' paramlist ')'


Terminals, with rules where they appear

$end (0) 0
' ' (32) 9 10
'!' (33) 48
'(' (40) 7 31 34 35 55
')' (41) 7 31 34 35 55
'*' (42) 44
'+' (43) 42
',' (44) 23 24
'-' (45) 43
'/' (47) 45
':' (58) 4 5 6
';' (59) 4 5 6 29 30 31 32 33 34 35 36 37
'<' (60) 46
'=' (61) 4 29 30
'>' (62) 37 47
'[' (91) 5 6 30 40
']' (93) 5 6 30 40
'{' (123) 26
'}' (125) 26
error (256)
KW_BYTE (258) 12
KW_SHORT (259) 14
KW_LONG (260) 15
KW_DOUBLE (261) 16
KW_CHAR (262)
KW_INT (263)
KW_FLOAT (264) 13
KW_IF (265) 31
KW_THEN (266) 32
KW_ELSE (267) 33
KW_WHILE (268) 34 35
KW_FOR (269)
KW_READ (270) 37
KW_RETURN (271)
KW_PRINT (272) 36
OPERATOR_LE (273) 49
OPERATOR_GE (274) 50
OPERATOR_EQ (275) 51
OPERATOR_NE (276) 52
OPERATOR_AND (277) 53
OPERATOR_OR (278) 54
TK_IDENTIFIER (279) 4 5 6 7 20 23 29 30 37 39 40 55
LIT_INTEGER (280) 5 6 8 17 30 41
LIT_REAL (281) 10 19
LIT_CHAR (282) 9 18
LIT_STRING (283) 36
TOKEN_ERROR (284)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
decl (50)
    on left: 2 3, on right: 1 2
dec (51)
    on left: 4 5 6 7, on right: 2
decv (52)
    on left: 8 9 10 11, on right: 5 8 9 10
typevar (53)
    on left: 12 13 14 15 16, on right: 4 5 6 7
literal (54)
    on left: 17 18 19, on right: 4 21 24
paramlist (55)
    on left: 20 21 22, on right: 7 55
rest (56)
    on left: 23 24 25, on right: 20 21 23 24
body (57)
    on left: 26, on right: 7 35
lcmd (58)
    on left: 27 28, on right: 26 27
cmd (59)
    on left: 29 30 31 32 33 34 35 36 37 38, on right: 27 31 32 33 34
    35
exp (60)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55, on right:
    29 30 31 34 35 40 42 43 44 45 46 47 48 49 50 51 52 53 54


State 0

    0 $accept: . program $end

    TK_IDENTIFIER  shift, and go to state 1
    '('            shift, and go to state 2

    $default  reduce using rule 3 (decl)

    program  go to state 3
    decl     go to state 4
    dec      go to state 5


State 1

    4 dec: TK_IDENTIFIER . ':' typevar '=' literal ';'
    5    | TK_IDENTIFIER . ':' typevar '[' LIT_INTEGER ']' decv ';'
    6    | TK_IDENTIFIER . ':' typevar '[' LIT_INTEGER ']' ';'

    ':'  shift, and go to state 6


State 2

    7 dec: '(' . typevar ')' TK_IDENTIFIER '(' paramlist ')' body

    KW_BYTE    shift, and go to state 7
    KW_SHORT   shift, and go to state 8
    KW_LONG    shift, and go to state 9
    KW_DOUBLE  shift, and go to state 10
    KW_FLOAT   shift, and go to state 11

    typevar  go to state 12


State 3

    0 $accept: program . $end

    $end  shift, and go to state 13


State 4

    1 program: decl .

    $default  reduce using rule 1 (program)


State 5

    2 decl: dec . decl

    TK_IDENTIFIER  shift, and go to state 1
    '('            shift, and go to state 2

    $default  reduce using rule 3 (decl)

    decl  go to state 14
    dec   go to state 5


State 6

    4 dec: TK_IDENTIFIER ':' . typevar '=' literal ';'
    5    | TK_IDENTIFIER ':' . typevar '[' LIT_INTEGER ']' decv ';'
    6    | TK_IDENTIFIER ':' . typevar '[' LIT_INTEGER ']' ';'

    KW_BYTE    shift, and go to state 7
    KW_SHORT   shift, and go to state 8
    KW_LONG    shift, and go to state 9
    KW_DOUBLE  shift, and go to state 10
    KW_FLOAT   shift, and go to state 11

    typevar  go to state 15


State 7

   12 typevar: KW_BYTE .

    $default  reduce using rule 12 (typevar)


State 8

   14 typevar: KW_SHORT .

    $default  reduce using rule 14 (typevar)


State 9

   15 typevar: KW_LONG .

    $default  reduce using rule 15 (typevar)


State 10

   16 typevar: KW_DOUBLE .

    $default  reduce using rule 16 (typevar)


State 11

   13 typevar: KW_FLOAT .

    $default  reduce using rule 13 (typevar)


State 12

    7 dec: '(' typevar . ')' TK_IDENTIFIER '(' paramlist ')' body

    ')'  shift, and go to state 16


State 13

    0 $accept: program $end .

    $default  accept


State 14

    2 decl: dec decl .

    $default  reduce using rule 2 (decl)


State 15

    4 dec: TK_IDENTIFIER ':' typevar . '=' literal ';'
    5    | TK_IDENTIFIER ':' typevar . '[' LIT_INTEGER ']' decv ';'
    6    | TK_IDENTIFIER ':' typevar . '[' LIT_INTEGER ']' ';'

    '='  shift, and go to state 17
    '['  shift, and go to state 18


State 16

    7 dec: '(' typevar ')' . TK_IDENTIFIER '(' paramlist ')' body

    TK_IDENTIFIER  shift, and go to state 19


State 17

    4 dec: TK_IDENTIFIER ':' typevar '=' . literal ';'

    LIT_INTEGER  shift, and go to state 20
    LIT_REAL     shift, and go to state 21
    LIT_CHAR     shift, and go to state 22

    literal  go to state 23


State 18

    5 dec: TK_IDENTIFIER ':' typevar '[' . LIT_INTEGER ']' decv ';'
    6    | TK_IDENTIFIER ':' typevar '[' . LIT_INTEGER ']' ';'

    LIT_INTEGER  shift, and go to state 24


State 19

    7 dec: '(' typevar ')' TK_IDENTIFIER . '(' paramlist ')' body

    '('  shift, and go to state 25


State 20

   17 literal: LIT_INTEGER .

    $default  reduce using rule 17 (literal)


State 21

   19 literal: LIT_REAL .

    $default  reduce using rule 19 (literal)


State 22

   18 literal: LIT_CHAR .

    $default  reduce using rule 18 (literal)


State 23

    4 dec: TK_IDENTIFIER ':' typevar '=' literal . ';'

    ';'  shift, and go to state 26


State 24

    5 dec: TK_IDENTIFIER ':' typevar '[' LIT_INTEGER . ']' decv ';'
    6    | TK_IDENTIFIER ':' typevar '[' LIT_INTEGER . ']' ';'

    ']'  shift, and go to state 27


State 25

    7 dec: '(' typevar ')' TK_IDENTIFIER '(' . paramlist ')' body

    TK_IDENTIFIER  shift, and go to state 28
    LIT_INTEGER    shift, and go to state 20
    LIT_REAL       shift, and go to state 21
    LIT_CHAR       shift, and go to state 22

    $default  reduce using rule 22 (paramlist)

    literal    go to state 29
    paramlist  go to state 30


State 26

    4 dec: TK_IDENTIFIER ':' typevar '=' literal ';' .

    $default  reduce using rule 4 (dec)


State 27

    5 dec: TK_IDENTIFIER ':' typevar '[' LIT_INTEGER ']' . decv ';'
    6    | TK_IDENTIFIER ':' typevar '[' LIT_INTEGER ']' . ';'

    LIT_INTEGER  shift, and go to state 31
    LIT_REAL     shift, and go to state 32
    LIT_CHAR     shift, and go to state 33
    ';'          shift, and go to state 34

    ';'  [reduce using rule 11 (decv)]

    decv  go to state 35


State 28

   20 paramlist: TK_IDENTIFIER . rest

    ','  shift, and go to state 36

    $default  reduce using rule 25 (rest)

    rest  go to state 37


State 29

   21 paramlist: literal . rest

    ','  shift, and go to state 36

    $default  reduce using rule 25 (rest)

    rest  go to state 38


State 30

    7 dec: '(' typevar ')' TK_IDENTIFIER '(' paramlist . ')' body

    ')'  shift, and go to state 39


State 31

    8 decv: LIT_INTEGER . decv

    LIT_INTEGER  shift, and go to state 31
    LIT_REAL     shift, and go to state 32
    LIT_CHAR     shift, and go to state 33

    $default  reduce using rule 11 (decv)

    decv  go to state 40


State 32

   10 decv: LIT_REAL . ' ' decv

    ' '  shift, and go to state 41


State 33

    9 decv: LIT_CHAR . ' ' decv

    ' '  shift, and go to state 42


State 34

    6 dec: TK_IDENTIFIER ':' typevar '[' LIT_INTEGER ']' ';' .

    $default  reduce using rule 6 (dec)


State 35

    5 dec: TK_IDENTIFIER ':' typevar '[' LIT_INTEGER ']' decv . ';'

    ';'  shift, and go to state 43


State 36

   23 rest: ',' . TK_IDENTIFIER rest
   24     | ',' . literal rest

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 20
    LIT_REAL       shift, and go to state 21
    LIT_CHAR       shift, and go to state 22

    literal  go to state 45


State 37

   20 paramlist: TK_IDENTIFIER rest .

    $default  reduce using rule 20 (paramlist)


State 38

   21 paramlist: literal rest .

    $default  reduce using rule 21 (paramlist)


State 39

    7 dec: '(' typevar ')' TK_IDENTIFIER '(' paramlist ')' . body

    '{'  shift, and go to state 46

    body  go to state 47


State 40

    8 decv: LIT_INTEGER decv .

    $default  reduce using rule 8 (decv)


State 41

   10 decv: LIT_REAL ' ' . decv

    LIT_INTEGER  shift, and go to state 31
    LIT_REAL     shift, and go to state 32
    LIT_CHAR     shift, and go to state 33

    $default  reduce using rule 11 (decv)

    decv  go to state 48


State 42

    9 decv: LIT_CHAR ' ' . decv

    LIT_INTEGER  shift, and go to state 31
    LIT_REAL     shift, and go to state 32
    LIT_CHAR     shift, and go to state 33

    $default  reduce using rule 11 (decv)

    decv  go to state 49


State 43

    5 dec: TK_IDENTIFIER ':' typevar '[' LIT_INTEGER ']' decv ';' .

    $default  reduce using rule 5 (dec)


State 44

   23 rest: ',' TK_IDENTIFIER . rest

    ','  shift, and go to state 36

    $default  reduce using rule 25 (rest)

    rest  go to state 50


State 45

   24 rest: ',' literal . rest

    ','  shift, and go to state 36

    $default  reduce using rule 25 (rest)

    rest  go to state 51


State 46

   26 body: '{' . lcmd '}'

    KW_IF          shift, and go to state 52
    KW_THEN        shift, and go to state 53
    KW_ELSE        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_PRINT       shift, and go to state 57
    TK_IDENTIFIER  shift, and go to state 58

    KW_IF          [reduce using rule 38 (cmd)]
    KW_THEN        [reduce using rule 38 (cmd)]
    KW_ELSE        [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    '}'            reduce using rule 28 (lcmd)
    '}'            [reduce using rule 38 (cmd)]
    $default       reduce using rule 28 (lcmd)

    lcmd  go to state 59
    cmd   go to state 60


State 47

    7 dec: '(' typevar ')' TK_IDENTIFIER '(' paramlist ')' body .

    $default  reduce using rule 7 (dec)


State 48

   10 decv: LIT_REAL ' ' decv .

    $default  reduce using rule 10 (decv)


State 49

    9 decv: LIT_CHAR ' ' decv .

    $default  reduce using rule 9 (decv)


State 50

   23 rest: ',' TK_IDENTIFIER rest .

    $default  reduce using rule 23 (rest)


State 51

   24 rest: ',' literal rest .

    $default  reduce using rule 24 (rest)


State 52

   31 cmd: KW_IF . '(' exp ')' cmd cmd ';'

    '('  shift, and go to state 61


State 53

   32 cmd: KW_THEN . cmd cmd ';'

    KW_IF          shift, and go to state 52
    KW_THEN        shift, and go to state 53
    KW_ELSE        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_PRINT       shift, and go to state 57
    TK_IDENTIFIER  shift, and go to state 58

    KW_IF          [reduce using rule 38 (cmd)]
    KW_THEN        [reduce using rule 38 (cmd)]
    KW_ELSE        [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    $default       reduce using rule 38 (cmd)

    cmd  go to state 62


State 54

   33 cmd: KW_ELSE . cmd cmd ';'

    KW_IF          shift, and go to state 52
    KW_THEN        shift, and go to state 53
    KW_ELSE        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_PRINT       shift, and go to state 57
    TK_IDENTIFIER  shift, and go to state 58

    KW_IF          [reduce using rule 38 (cmd)]
    KW_THEN        [reduce using rule 38 (cmd)]
    KW_ELSE        [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    $default       reduce using rule 38 (cmd)

    cmd  go to state 63


State 55

   34 cmd: KW_WHILE . '(' exp ')' cmd cmd ';'
   35    | KW_WHILE . '(' exp ')' body cmd ';'

    '('  shift, and go to state 64


State 56

   37 cmd: KW_READ . '>' TK_IDENTIFIER ';'

    '>'  shift, and go to state 65


State 57

   36 cmd: KW_PRINT . LIT_STRING ';'

    LIT_STRING  shift, and go to state 66


State 58

   29 cmd: TK_IDENTIFIER . '=' exp ';'
   30    | TK_IDENTIFIER . '[' LIT_INTEGER ']' '=' exp ';'

    '='  shift, and go to state 67
    '['  shift, and go to state 68


State 59

   26 body: '{' lcmd . '}'

    '}'  shift, and go to state 69


State 60

   27 lcmd: cmd . lcmd

    KW_IF          shift, and go to state 52
    KW_THEN        shift, and go to state 53
    KW_ELSE        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_PRINT       shift, and go to state 57
    TK_IDENTIFIER  shift, and go to state 58

    KW_IF          [reduce using rule 38 (cmd)]
    KW_THEN        [reduce using rule 38 (cmd)]
    KW_ELSE        [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    '}'            reduce using rule 28 (lcmd)
    '}'            [reduce using rule 38 (cmd)]
    $default       reduce using rule 28 (lcmd)

    lcmd  go to state 70
    cmd   go to state 60


State 61

   31 cmd: KW_IF '(' . exp ')' cmd cmd ';'

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 74


State 62

   32 cmd: KW_THEN cmd . cmd ';'

    KW_IF          shift, and go to state 52
    KW_THEN        shift, and go to state 53
    KW_ELSE        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_PRINT       shift, and go to state 57
    TK_IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 38 (cmd)

    cmd  go to state 75


State 63

   33 cmd: KW_ELSE cmd . cmd ';'

    KW_IF          shift, and go to state 52
    KW_THEN        shift, and go to state 53
    KW_ELSE        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_PRINT       shift, and go to state 57
    TK_IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 38 (cmd)

    cmd  go to state 76


State 64

   34 cmd: KW_WHILE '(' . exp ')' cmd cmd ';'
   35    | KW_WHILE '(' . exp ')' body cmd ';'

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 77


State 65

   37 cmd: KW_READ '>' . TK_IDENTIFIER ';'

    TK_IDENTIFIER  shift, and go to state 78


State 66

   36 cmd: KW_PRINT LIT_STRING . ';'

    ';'  shift, and go to state 79


State 67

   29 cmd: TK_IDENTIFIER '=' . exp ';'

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 80


State 68

   30 cmd: TK_IDENTIFIER '[' . LIT_INTEGER ']' '=' exp ';'

    LIT_INTEGER  shift, and go to state 81


State 69

   26 body: '{' lcmd '}' .

    $default  reduce using rule 26 (body)


State 70

   27 lcmd: cmd lcmd .

    $default  reduce using rule 27 (lcmd)


State 71

   39 exp: TK_IDENTIFIER .
   40    | TK_IDENTIFIER . '[' exp ']'
   55    | TK_IDENTIFIER . '(' paramlist ')'

    '['  shift, and go to state 82
    '('  shift, and go to state 83

    $default  reduce using rule 39 (exp)


State 72

   41 exp: LIT_INTEGER .

    $default  reduce using rule 41 (exp)


State 73

   48 exp: '!' . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 84


State 74

   31 cmd: KW_IF '(' exp . ')' cmd cmd ';'
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    ')'           shift, and go to state 91
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97


State 75

   32 cmd: KW_THEN cmd cmd . ';'

    ';'  shift, and go to state 98


State 76

   33 cmd: KW_ELSE cmd cmd . ';'

    ';'  shift, and go to state 99


State 77

   34 cmd: KW_WHILE '(' exp . ')' cmd cmd ';'
   35    | KW_WHILE '(' exp . ')' body cmd ';'
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    ')'           shift, and go to state 100
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97


State 78

   37 cmd: KW_READ '>' TK_IDENTIFIER . ';'

    ';'  shift, and go to state 101


State 79

   36 cmd: KW_PRINT LIT_STRING ';' .

    $default  reduce using rule 36 (cmd)


State 80

   29 cmd: TK_IDENTIFIER '=' exp . ';'
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    ';'           shift, and go to state 102
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97


State 81

   30 cmd: TK_IDENTIFIER '[' LIT_INTEGER . ']' '=' exp ';'

    ']'  shift, and go to state 103


State 82

   40 exp: TK_IDENTIFIER '[' . exp ']'

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 104


State 83

   55 exp: TK_IDENTIFIER '(' . paramlist ')'

    TK_IDENTIFIER  shift, and go to state 28
    LIT_INTEGER    shift, and go to state 20
    LIT_REAL       shift, and go to state 21
    LIT_CHAR       shift, and go to state 22

    $default  reduce using rule 22 (paramlist)

    literal    go to state 29
    paramlist  go to state 105


State 84

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   48    | '!' exp .
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 48 (exp)]
    OPERATOR_GE   [reduce using rule 48 (exp)]
    OPERATOR_EQ   [reduce using rule 48 (exp)]
    OPERATOR_NE   [reduce using rule 48 (exp)]
    OPERATOR_AND  [reduce using rule 48 (exp)]
    OPERATOR_OR   [reduce using rule 48 (exp)]
    '>'           [reduce using rule 48 (exp)]
    '+'           [reduce using rule 48 (exp)]
    '-'           [reduce using rule 48 (exp)]
    '*'           [reduce using rule 48 (exp)]
    '/'           [reduce using rule 48 (exp)]
    '<'           [reduce using rule 48 (exp)]
    $default      reduce using rule 48 (exp)


State 85

   49 exp: exp OPERATOR_LE . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 106


State 86

   50 exp: exp OPERATOR_GE . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 107


State 87

   51 exp: exp OPERATOR_EQ . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 108


State 88

   52 exp: exp OPERATOR_NE . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 109


State 89

   53 exp: exp OPERATOR_AND . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 110


State 90

   54 exp: exp OPERATOR_OR . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 111


State 91

   31 cmd: KW_IF '(' exp ')' . cmd cmd ';'

    KW_IF          shift, and go to state 52
    KW_THEN        shift, and go to state 53
    KW_ELSE        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_PRINT       shift, and go to state 57
    TK_IDENTIFIER  shift, and go to state 58

    KW_IF          [reduce using rule 38 (cmd)]
    KW_THEN        [reduce using rule 38 (cmd)]
    KW_ELSE        [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    $default       reduce using rule 38 (cmd)

    cmd  go to state 112


State 92

   47 exp: exp '>' . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 113


State 93

   42 exp: exp '+' . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 114


State 94

   43 exp: exp '-' . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 115


State 95

   44 exp: exp '*' . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 116


State 96

   45 exp: exp '/' . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 117


State 97

   46 exp: exp '<' . exp

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 118


State 98

   32 cmd: KW_THEN cmd cmd ';' .

    $default  reduce using rule 32 (cmd)


State 99

   33 cmd: KW_ELSE cmd cmd ';' .

    $default  reduce using rule 33 (cmd)


State 100

   34 cmd: KW_WHILE '(' exp ')' . cmd cmd ';'
   35    | KW_WHILE '(' exp ')' . body cmd ';'

    KW_IF          shift, and go to state 52
    KW_THEN        shift, and go to state 53
    KW_ELSE        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_PRINT       shift, and go to state 57
    TK_IDENTIFIER  shift, and go to state 58
    '{'            shift, and go to state 46

    KW_IF          [reduce using rule 38 (cmd)]
    KW_THEN        [reduce using rule 38 (cmd)]
    KW_ELSE        [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    $default       reduce using rule 38 (cmd)

    body  go to state 119
    cmd   go to state 120


State 101

   37 cmd: KW_READ '>' TK_IDENTIFIER ';' .

    $default  reduce using rule 37 (cmd)


State 102

   29 cmd: TK_IDENTIFIER '=' exp ';' .

    $default  reduce using rule 29 (cmd)


State 103

   30 cmd: TK_IDENTIFIER '[' LIT_INTEGER ']' . '=' exp ';'

    '='  shift, and go to state 121


State 104

   40 exp: TK_IDENTIFIER '[' exp . ']'
   42    | exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    ']'           shift, and go to state 122
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97


State 105

   55 exp: TK_IDENTIFIER '(' paramlist . ')'

    ')'  shift, and go to state 123


State 106

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   49    | exp OPERATOR_LE exp .
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 49 (exp)]
    OPERATOR_GE   [reduce using rule 49 (exp)]
    OPERATOR_EQ   [reduce using rule 49 (exp)]
    OPERATOR_NE   [reduce using rule 49 (exp)]
    OPERATOR_AND  [reduce using rule 49 (exp)]
    OPERATOR_OR   [reduce using rule 49 (exp)]
    '>'           [reduce using rule 49 (exp)]
    '+'           [reduce using rule 49 (exp)]
    '-'           [reduce using rule 49 (exp)]
    '*'           [reduce using rule 49 (exp)]
    '/'           [reduce using rule 49 (exp)]
    '<'           [reduce using rule 49 (exp)]
    $default      reduce using rule 49 (exp)


State 107

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   50    | exp OPERATOR_GE exp .
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 50 (exp)]
    OPERATOR_GE   [reduce using rule 50 (exp)]
    OPERATOR_EQ   [reduce using rule 50 (exp)]
    OPERATOR_NE   [reduce using rule 50 (exp)]
    OPERATOR_AND  [reduce using rule 50 (exp)]
    OPERATOR_OR   [reduce using rule 50 (exp)]
    '>'           [reduce using rule 50 (exp)]
    '+'           [reduce using rule 50 (exp)]
    '-'           [reduce using rule 50 (exp)]
    '*'           [reduce using rule 50 (exp)]
    '/'           [reduce using rule 50 (exp)]
    '<'           [reduce using rule 50 (exp)]
    $default      reduce using rule 50 (exp)


State 108

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   51    | exp OPERATOR_EQ exp .
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 51 (exp)]
    OPERATOR_GE   [reduce using rule 51 (exp)]
    OPERATOR_EQ   [reduce using rule 51 (exp)]
    OPERATOR_NE   [reduce using rule 51 (exp)]
    OPERATOR_AND  [reduce using rule 51 (exp)]
    OPERATOR_OR   [reduce using rule 51 (exp)]
    '>'           [reduce using rule 51 (exp)]
    '+'           [reduce using rule 51 (exp)]
    '-'           [reduce using rule 51 (exp)]
    '*'           [reduce using rule 51 (exp)]
    '/'           [reduce using rule 51 (exp)]
    '<'           [reduce using rule 51 (exp)]
    $default      reduce using rule 51 (exp)


State 109

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   52    | exp OPERATOR_NE exp .
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 52 (exp)]
    OPERATOR_GE   [reduce using rule 52 (exp)]
    OPERATOR_EQ   [reduce using rule 52 (exp)]
    OPERATOR_NE   [reduce using rule 52 (exp)]
    OPERATOR_AND  [reduce using rule 52 (exp)]
    OPERATOR_OR   [reduce using rule 52 (exp)]
    '>'           [reduce using rule 52 (exp)]
    '+'           [reduce using rule 52 (exp)]
    '-'           [reduce using rule 52 (exp)]
    '*'           [reduce using rule 52 (exp)]
    '/'           [reduce using rule 52 (exp)]
    '<'           [reduce using rule 52 (exp)]
    $default      reduce using rule 52 (exp)


State 110

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   53    | exp OPERATOR_AND exp .
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 53 (exp)]
    OPERATOR_GE   [reduce using rule 53 (exp)]
    OPERATOR_EQ   [reduce using rule 53 (exp)]
    OPERATOR_NE   [reduce using rule 53 (exp)]
    OPERATOR_AND  [reduce using rule 53 (exp)]
    OPERATOR_OR   [reduce using rule 53 (exp)]
    '>'           [reduce using rule 53 (exp)]
    '+'           [reduce using rule 53 (exp)]
    '-'           [reduce using rule 53 (exp)]
    '*'           [reduce using rule 53 (exp)]
    '/'           [reduce using rule 53 (exp)]
    '<'           [reduce using rule 53 (exp)]
    $default      reduce using rule 53 (exp)


State 111

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp
   54    | exp OPERATOR_OR exp .

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 54 (exp)]
    OPERATOR_GE   [reduce using rule 54 (exp)]
    OPERATOR_EQ   [reduce using rule 54 (exp)]
    OPERATOR_NE   [reduce using rule 54 (exp)]
    OPERATOR_AND  [reduce using rule 54 (exp)]
    OPERATOR_OR   [reduce using rule 54 (exp)]
    '>'           [reduce using rule 54 (exp)]
    '+'           [reduce using rule 54 (exp)]
    '-'           [reduce using rule 54 (exp)]
    '*'           [reduce using rule 54 (exp)]
    '/'           [reduce using rule 54 (exp)]
    '<'           [reduce using rule 54 (exp)]
    $default      reduce using rule 54 (exp)


State 112

   31 cmd: KW_IF '(' exp ')' cmd . cmd ';'

    KW_IF          shift, and go to state 52
    KW_THEN        shift, and go to state 53
    KW_ELSE        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_PRINT       shift, and go to state 57
    TK_IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 38 (cmd)

    cmd  go to state 124


State 113

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   47    | exp '>' exp .
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 47 (exp)]
    OPERATOR_GE   [reduce using rule 47 (exp)]
    OPERATOR_EQ   [reduce using rule 47 (exp)]
    OPERATOR_NE   [reduce using rule 47 (exp)]
    OPERATOR_AND  [reduce using rule 47 (exp)]
    OPERATOR_OR   [reduce using rule 47 (exp)]
    '>'           [reduce using rule 47 (exp)]
    '+'           [reduce using rule 47 (exp)]
    '-'           [reduce using rule 47 (exp)]
    '*'           [reduce using rule 47 (exp)]
    '/'           [reduce using rule 47 (exp)]
    '<'           [reduce using rule 47 (exp)]
    $default      reduce using rule 47 (exp)


State 114

   42 exp: exp . '+' exp
   42    | exp '+' exp .
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 42 (exp)]
    OPERATOR_GE   [reduce using rule 42 (exp)]
    OPERATOR_EQ   [reduce using rule 42 (exp)]
    OPERATOR_NE   [reduce using rule 42 (exp)]
    OPERATOR_AND  [reduce using rule 42 (exp)]
    OPERATOR_OR   [reduce using rule 42 (exp)]
    '>'           [reduce using rule 42 (exp)]
    '+'           [reduce using rule 42 (exp)]
    '-'           [reduce using rule 42 (exp)]
    '*'           [reduce using rule 42 (exp)]
    '/'           [reduce using rule 42 (exp)]
    '<'           [reduce using rule 42 (exp)]
    $default      reduce using rule 42 (exp)


State 115

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   43    | exp '-' exp .
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 43 (exp)]
    OPERATOR_GE   [reduce using rule 43 (exp)]
    OPERATOR_EQ   [reduce using rule 43 (exp)]
    OPERATOR_NE   [reduce using rule 43 (exp)]
    OPERATOR_AND  [reduce using rule 43 (exp)]
    OPERATOR_OR   [reduce using rule 43 (exp)]
    '>'           [reduce using rule 43 (exp)]
    '+'           [reduce using rule 43 (exp)]
    '-'           [reduce using rule 43 (exp)]
    '*'           [reduce using rule 43 (exp)]
    '/'           [reduce using rule 43 (exp)]
    '<'           [reduce using rule 43 (exp)]
    $default      reduce using rule 43 (exp)


State 116

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   44    | exp '*' exp .
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 44 (exp)]
    OPERATOR_GE   [reduce using rule 44 (exp)]
    OPERATOR_EQ   [reduce using rule 44 (exp)]
    OPERATOR_NE   [reduce using rule 44 (exp)]
    OPERATOR_AND  [reduce using rule 44 (exp)]
    OPERATOR_OR   [reduce using rule 44 (exp)]
    '>'           [reduce using rule 44 (exp)]
    '+'           [reduce using rule 44 (exp)]
    '-'           [reduce using rule 44 (exp)]
    '*'           [reduce using rule 44 (exp)]
    '/'           [reduce using rule 44 (exp)]
    '<'           [reduce using rule 44 (exp)]
    $default      reduce using rule 44 (exp)


State 117

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   45    | exp '/' exp .
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 45 (exp)]
    OPERATOR_GE   [reduce using rule 45 (exp)]
    OPERATOR_EQ   [reduce using rule 45 (exp)]
    OPERATOR_NE   [reduce using rule 45 (exp)]
    OPERATOR_AND  [reduce using rule 45 (exp)]
    OPERATOR_OR   [reduce using rule 45 (exp)]
    '>'           [reduce using rule 45 (exp)]
    '+'           [reduce using rule 45 (exp)]
    '-'           [reduce using rule 45 (exp)]
    '*'           [reduce using rule 45 (exp)]
    '/'           [reduce using rule 45 (exp)]
    '<'           [reduce using rule 45 (exp)]
    $default      reduce using rule 45 (exp)


State 118

   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   46    | exp '<' exp .
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97

    OPERATOR_LE   [reduce using rule 46 (exp)]
    OPERATOR_GE   [reduce using rule 46 (exp)]
    OPERATOR_EQ   [reduce using rule 46 (exp)]
    OPERATOR_NE   [reduce using rule 46 (exp)]
    OPERATOR_AND  [reduce using rule 46 (exp)]
    OPERATOR_OR   [reduce using rule 46 (exp)]
    '>'           [reduce using rule 46 (exp)]
    '+'           [reduce using rule 46 (exp)]
    '-'           [reduce using rule 46 (exp)]
    '*'           [reduce using rule 46 (exp)]
    '/'           [reduce using rule 46 (exp)]
    '<'           [reduce using rule 46 (exp)]
    $default      reduce using rule 46 (exp)


State 119

   35 cmd: KW_WHILE '(' exp ')' body . cmd ';'

    KW_IF          shift, and go to state 52
    KW_THEN        shift, and go to state 53
    KW_ELSE        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_PRINT       shift, and go to state 57
    TK_IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 38 (cmd)

    cmd  go to state 125


State 120

   34 cmd: KW_WHILE '(' exp ')' cmd . cmd ';'

    KW_IF          shift, and go to state 52
    KW_THEN        shift, and go to state 53
    KW_ELSE        shift, and go to state 54
    KW_WHILE       shift, and go to state 55
    KW_READ        shift, and go to state 56
    KW_PRINT       shift, and go to state 57
    TK_IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 38 (cmd)

    cmd  go to state 126


State 121

   30 cmd: TK_IDENTIFIER '[' LIT_INTEGER ']' '=' . exp ';'

    TK_IDENTIFIER  shift, and go to state 71
    LIT_INTEGER    shift, and go to state 72
    '!'            shift, and go to state 73

    exp  go to state 127


State 122

   40 exp: TK_IDENTIFIER '[' exp ']' .

    $default  reduce using rule 40 (exp)


State 123

   55 exp: TK_IDENTIFIER '(' paramlist ')' .

    $default  reduce using rule 55 (exp)


State 124

   31 cmd: KW_IF '(' exp ')' cmd cmd . ';'

    ';'  shift, and go to state 128


State 125

   35 cmd: KW_WHILE '(' exp ')' body cmd . ';'

    ';'  shift, and go to state 129


State 126

   34 cmd: KW_WHILE '(' exp ')' cmd cmd . ';'

    ';'  shift, and go to state 130


State 127

   30 cmd: TK_IDENTIFIER '[' LIT_INTEGER ']' '=' exp . ';'
   42 exp: exp . '+' exp
   43    | exp . '-' exp
   44    | exp . '*' exp
   45    | exp . '/' exp
   46    | exp . '<' exp
   47    | exp . '>' exp
   49    | exp . OPERATOR_LE exp
   50    | exp . OPERATOR_GE exp
   51    | exp . OPERATOR_EQ exp
   52    | exp . OPERATOR_NE exp
   53    | exp . OPERATOR_AND exp
   54    | exp . OPERATOR_OR exp

    OPERATOR_LE   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_EQ   shift, and go to state 87
    OPERATOR_NE   shift, and go to state 88
    OPERATOR_AND  shift, and go to state 89
    OPERATOR_OR   shift, and go to state 90
    ';'           shift, and go to state 131
    '>'           shift, and go to state 92
    '+'           shift, and go to state 93
    '-'           shift, and go to state 94
    '*'           shift, and go to state 95
    '/'           shift, and go to state 96
    '<'           shift, and go to state 97


State 128

   31 cmd: KW_IF '(' exp ')' cmd cmd ';' .

    $default  reduce using rule 31 (cmd)


State 129

   35 cmd: KW_WHILE '(' exp ')' body cmd ';' .

    $default  reduce using rule 35 (cmd)


State 130

   34 cmd: KW_WHILE '(' exp ')' cmd cmd ';' .

    $default  reduce using rule 34 (cmd)


State 131

   30 cmd: TK_IDENTIFIER '[' LIT_INTEGER ']' '=' exp ';' .

    $default  reduce using rule 30 (cmd)
